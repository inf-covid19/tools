{"version":3,"sources":["assets/ufrgs-inf.png","assets/ufrgs.png","constants.ts","hooks/useMetadata.ts","store/index.ts","hooks/useRegionData.ts","components/CustomizableChart.tsx","components/Editor.tsx","assets/logo.svg","components/Loader.tsx","components/ListDescriptor.tsx","App.tsx","hooks/useLastUpdated.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","DEFAULT_OPTIONS","chartType","metric","showDataLabels","isCumulative","title","dayInterval","selectedCountries","alignAt","DEFAULT_COUNTRIES","DATA_SOURCES","name","url","useMetadata","useState","metadata","setMetadata","loading","setLoading","useEffect","cancelled","fetch","then","resp","json","localStorage","setItem","JSON","stringify","catch","error","console","warn","finally","useMemo","data","STORAGE_KEY","cache","saved","getItem","parse","initializeCache","getKey","key","withCache","promiser","hasOwnProperty","differenceInHours","Date","created_at","cachedData","Promise","resolve","toISOString","reason","reject","useRegionData","regionIds","setData","setError","triggerUpdate","sortBy","join","all","map","id","regionId","regionData","get","parent","s","split","slice","length","csv","file","getRegionData","results","forEach","res","index","err","ordinalFormattter","n","numeral","format","numberFormatter","d3","placeTypeMap","state","city","autonomous_community","country","county","nhsr","utla","health_board","lgd","RegionConfig","Brazil","date","cases","deaths","Spain","United_Kingdom","United_States_of_America","Sweden","Default","React","forwardRef","props","ref","rest","timeline","eachDayOfInterval","start","subDays","end","Object","keys","series","entries","region","first","hasSubRegion","indexOf","config","subRegion","last","filter","r","place_type","orderBy","x","startOfDay","cumulativeValue","prevDate","normalizedData","reduceRight","arr","curr","value","parseInt","diffValue","differenceInDays","missingInterval","push","total","replace","v","y","regionDataByDate","acc","prevValue","regionSeries","dateData","getTime","sortedSeries","chartOptions","chart","toolbar","tools","download","selection","zoom","zoomin","zoomout","pan","reset","tooltip","formatter","undefined","xaxis","type","labels","dataLabels","enabled","text","style","fontSize","fontFamily","subtitle","floating","plotOptions","heatmap","shadeIntensity","colorScale","ranges","from","to","color","foreColor","height","display","justifyContent","alignItems","Loader","active","inline","options","SAVED_CHARTS_KEY","DEFAULTS_KEY","defaultsValues","defaults","fromEntries","k","savedChartsJSON","parsedDefaults","App","getSavedCharts","savedCharts","setSavedCharts","chartRef","useRef","setChartType","setMetric","setAlignAt","setIsCumulative","setShowDataLabels","setTitle","setDayInterval","selectedRegions","setSelectedRegions","setSaved","regionsOptions","flatMap","countryData","countryName","regions","selectedRegionOptions","setTimeout","Grid","padded","Row","Column","width","Segment","Form","Header","Field","placeholder","defaultValue","onBlur","target","Select","label","onChange","_","min","disabled","control","searchInput","clearable","children","htmlFor","next","invertedIndex","search","multiple","Checkbox","toggle","checked","Button","positive","onClick","current","dataURI","imgURI","newSavedCharts","as","className","item","Card","Image","alt","wrapped","ui","src","Content","Meta","extra","Icon","Group","widths","attached","primary","window","scrollTo","idx","icon","_extends","assign","i","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref5","_ref6","_ref7","_ref8","fillRule","clipRule","_ref9","_ref10","_ref","svgRef","viewBox","ForwardRef","background","ListDescriptor","effectiveChildren","Children","toArray","child","lastUpdated","subHours","setDate","commit","author","useLastUpdated","LogoUFRGS","margin","Subheader","LogoINF","Container","fluid","rel","href","fns","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,2XCA9BC,EAAkB,CAC7BC,UAAW,UACXC,OAAQ,QACRC,gBAAgB,EAChBC,cAAc,EACdC,MAAO,qCACPC,YAAa,GACbC,kBAAmB,GACnBC,QAAS,GAGEC,EAAoB,CAC/B,SACA,2BACA,iBACA,QACA,SACA,QACA,UACA,SACA,SACA,WACA,QACA,cACA,OACA,SACA,cACA,QAGWC,EAAe,CAC1B,CACEC,KAAM,OACNC,IAAK,yHAEP,CAAED,KAAM,YAAaC,IAAK,0CAC1B,CACED,KAAM,OACNC,IAAK,4HAEP,CAAED,KAAM,WAAYC,IAAK,4CACzB,CAAED,KAAM,MAAOC,IAAK,8BACpB,CACED,KAAM,MACNC,IAAK,gF,6DCxCM,SAASC,IAAe,IAAD,EACJC,mBAA8B,IAD1B,mBAC7BC,EAD6B,KACnBC,EADmB,OAENF,oBAAS,GAFH,mBAE7BG,EAF6B,KAEpBC,EAFoB,KA4BpC,OAxBAC,qBAAU,WACR,IAAIC,GAAY,EAkBhB,OAhBAC,MAAM,wFACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACAJ,IAEJK,aAAaC,QAdO,iCAceC,KAAKC,UAAUJ,IAElDR,EAAYQ,OAEbK,OAAM,SAAAC,GACLC,QAAQC,KAAK,4BAA6BF,MAE3CG,SAAQ,WACPf,GAAW,MAGR,WACLE,GAAY,KAEb,IAEIc,mBAAQ,iBAAO,CAAEC,KAAMpB,EAAUE,aAAY,CAACF,EAAUE,I,qBC5B3DmB,EAAc,4BA4BpB,IAAMC,EAbN,WACE,IACE,IAAMC,EAAQb,aAAac,QAAQH,GACnC,GAAIE,EAEF,OADeX,KAAKa,MAAMF,GAG5B,SACA,MAAO,GAET,MAAO,GAGKG,GAERC,EAAS,SAACC,GAAD,gBAAoBP,EAApB,YAAmCO,IAE5CC,EAAY,SAAID,EAAaE,GACjC,GAAIR,EAAMS,eAAeH,IACnBI,YAAkB,IAAIC,KAAQ,IAAIA,KAAKX,EAAMM,GAAKM,aAAe,EAAG,CACtE,IAAMC,EAAazB,aAAac,QAAQG,EAAOC,IAC/C,GAAIO,EAAY,OAAOC,QAAQC,QAAQzB,KAAKa,MAAMU,IAItD,OAAOL,IACJvB,MACC,SAAAa,GAGE,OAFAE,EAAMM,GAAO,CAAEM,YAAY,IAAID,MAAOK,eACtC5B,aAAaC,QAAQgB,EAAOC,GAAMhB,KAAKC,UAAUO,IAC1CA,KAET,SAAAmB,GACE,GAAI7B,aAAaqB,eAAeJ,EAAOC,IAAO,CAC5C,IAAMO,EAAazB,aAAac,QAAQG,EAAOC,IAC/C,GAAIO,EAAY,OAAOC,QAAQC,QAAQzB,KAAKa,MAAMU,IAEpD,OAAOC,QAAQI,OAAOD,MAGzBrB,SAAQ,WACPR,aAAaC,QAAQU,EAAaT,KAAKC,UAAUS,QCvDxC,SAASmB,EAAcC,GAAsB,IAAD,EACjC3C,mBAA6C,MADZ,mBAClDqB,EADkD,KAC5CuB,EAD4C,OAE3B5C,oBAAS,GAFkB,mBAElDG,EAFkD,KAEzCC,EAFyC,OAG/BJ,mBAAS,MAHsB,mBAGlDgB,EAHkD,KAG3C6B,EAH2C,KAKnDC,EAAgB1B,mBAAQ,WAC5B,OAAO2B,IAAOJ,GAAWK,KAAK,OAC7B,CAACL,IAmCJ,OAjCAtC,qBAAU,WACR,IAAIC,GAAY,EA2BhB,OAzBAuC,EAAS,MACTD,EAAQ,MACRxC,GAAW,GAEXiC,QAAQY,IAAIN,EAAUO,KAAI,SAAAC,GAAE,ODfH,SAACC,GAC5B,IAAMnD,EAAWY,KAAKa,MAAMf,aAAac,QDLf,mCCKwC,MAE5D4B,EAAaC,IAAIrD,EAAUmD,GAEjC,GAAIC,GAAgBA,EAAWE,OAAQ,CACrC,IAAMC,EAAIJ,EAASK,MAAM,KACzBL,EAAW,sBAAII,EAAEE,MAAM,EAAGF,EAAEG,OAAS,IAA1B,CAA8BN,EAAWE,SAAQP,KAAK,KAGnE,OAAOlB,EAAUsB,GAAU,kBAAMQ,YAAI,qEAAD,OAAsEN,IAAIrD,EAAUmD,GAAUS,KAA9F,YCKFC,CAAcX,OAC3C3C,MAAK,SAAAuD,GACJ,IAAIzD,EAAJ,CAEA,IAAMe,EAAoC,GAC1C0C,EAAQC,SAAQ,SAACC,EAAKC,GACpB7C,EAAKsB,EAAUuB,IAAUD,KAE3BrB,EAAQvB,OAETN,OAAM,SAAAoD,GACD7D,GAEJuC,EAASsB,MAEVhD,SAAQ,WACHb,GAEJF,GAAW,MAGR,WACLE,GAAY,KAEb,CAACwC,IAEG1B,mBAAQ,iBAAO,CAAEC,OAAMlB,UAASa,WAAU,CAACK,EAAMlB,EAASa,I,uJClC7DoD,GAAoB,SAACC,GAAD,OAAeC,KAAQD,GAAGE,OAAO,OACrDC,GAAkBC,IAAU,OAI5BC,GAAoB,CACxBC,MAAO,QACPC,KAAM,OACNC,qBAAsB,SACtBC,QAAS,SACTC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,aAAc,SACdC,IAAK,UAGDC,GAAoB,CACxBC,OAAQ,CACNC,KAAM,CACJzF,KAAM,OACN0E,OAAQ,cAEVnF,OAAQ,CACNmG,MAAO,YACPC,OAAQ,WAGZC,MAAO,CACLH,KAAM,CACJzF,KAAM,OACN0E,OAAQ,cAEVnF,OAAQ,CACNmG,MAAO,QACPC,OAAQ,WAGZE,eAAgB,CACdJ,KAAM,CACJzF,KAAM,OACN0E,OAAQ,cAEVnF,OAAQ,CACNmG,MAAO,QACPC,OAAQ,WAGZG,yBAA0B,CACxBL,KAAM,CACJzF,KAAM,OACN0E,OAAQ,cAEVnF,OAAQ,CACNmG,MAAO,QACPC,OAAQ,WAGZI,OAAQ,CACNN,KAAM,CACJzF,KAAM,OACN0E,OAAQ,cAEVnF,OAAQ,CACNmG,MAAO,QACPC,OAAQ,WAGZK,QAAS,CACPP,KAAM,CACJzF,KAAM,UACN0E,OAAQ,cAEVnF,OAAQ,CACNmG,MAAO,QACPC,OAAQ,YAiNCM,WAAMC,YA5MrB,SAA2BC,EAA+BC,GAAsB,IAAD,EACwDD,EAA7H7G,iBADqE,MACzD,UADyD,EAC9CI,EAAsGyG,EAAtGzG,MAAOH,EAA+F4G,EAA/F5G,OAAQC,EAAuF2G,EAAvF3G,eAAgBC,EAAuE0G,EAAvE1G,aAAcE,EAAyDwG,EAAzDxG,YAAaC,EAA4CuG,EAA5CvG,kBADZ,EACwDuG,EAAzBtG,eAD/B,MACyC,EADzC,EAC+CwG,EAD/C,YACwDF,EADxD,4GAGvEG,EAAW/E,mBACf,kBACEgF,YAAkB,CAChBC,MAAOC,YAAQ,IAAIpE,KAAQ1C,GAC3B+G,IAAK,IAAIrE,SAEb,CAAC1C,IAT0E,EAcnDkD,EAFPtB,mBAAQ,kBAAMoF,OAAOC,KAAKhH,KAAoB,CAACA,KAE1D4B,EAdqE,EAcrEA,KAAMlB,EAd+D,EAc/DA,QAERuG,EAAStF,mBAAQ,WACrB,OAAIjB,IAAYkB,EACP,GAGFmF,OAAOG,QAAQtF,GAAM6B,KAAI,YAA2B,IAAD,qBAAxB0D,EAAwB,KAAhBvD,EAAgB,KAClDyB,EAAU+B,IAAMD,EAAOnD,MAAM,MAC7BqD,EAAeF,EAAOG,QAAQ,MAAQ,EACtCC,EAASF,GAAgB1B,GAAapD,eAAe8C,GAAWM,GAAaN,GAAWM,GAAaS,QAE3G,GAAIiB,EAAc,CAChB,IAAIG,EAAYC,IAAKN,EAAOnD,MAAM,MAClCJ,EAAaA,EAAW8D,QAAO,SAACC,GAAD,OAAYA,EAAE1C,GAAa0C,EAAEC,eAAiBJ,KAG/E5D,EAAaiE,IAAQjE,GAAY,SAAAkE,GAAC,OAAI7F,YAAM6F,EAAEP,EAAO1B,KAAKzF,MAAiBmH,EAAO1B,KAAKf,OAAQiD,YAAW,IAAItF,SAAU,QAExH,IAAIuF,EAAkB,EACtB,GAAI/H,EAAU,EAAG,CAAC,IAAD,EACXgI,EAEEC,EAAiBtE,EAAWuE,aAAmB,SAACC,EAAKC,GACzD,IAAIxC,EAAO5D,YAAMoG,EAAKd,EAAO1B,KAAKzF,MAAiBmH,EAAO1B,KAAKf,OAAQiD,YAAW,IAAItF,OAChF6F,EAAQC,SAASF,EAAKd,EAAO5H,OAAOA,KAAY,KAClD6I,EAAYF,EAMhB,GAJIjB,IACFmB,EAAYF,EAAQN,GAGlBC,GAAYQ,YAAiB5C,EAAMoC,GAAY,EAAG,CACpD,IAAMS,EAAkB/B,YAAkB,CACxCC,MAAOqB,EACPnB,IAAKjB,IAEP6C,EAAgBzE,MAAM,EAAGyE,EAAgBxE,OAAS,GAAGK,SAAQ,WAC3D6D,EAAIO,KAAK,CACPC,MAAOZ,OAWb,OANAA,GAAmBQ,EACnBJ,EAAIO,KAAJ,eACKN,EADL,CAEEO,MAAOZ,KAETC,EAAWpC,EACJuC,IACN,IACH,MAAO,CACLhI,KAAI,UAAEqH,IAAKN,EAAOnD,MAAM,aAApB,aAAE,EAAyB6E,QAAQ,KAAM,KAC7CzG,IAAK+E,EACLvF,KAAMsG,EACHR,QAAO,SAAAoB,GAAC,OAAIA,EAAEF,OAAS3I,KACvBwD,KAAI,SAACqF,EAAGrE,GAAJ,MAAe,CAClBqD,EAAGrD,EAAQ,EACXsE,EAAGlJ,EAAeiJ,EAAEF,MAAQE,EAAEnJ,QAKtC,IAAMqJ,EAAmBpF,EAAWuE,aAAiC,SAACc,EAAKZ,GACzE,IAAMC,EAAQC,SAASF,EAAKd,EAAO5H,OAAOA,KAAY,KAChDkG,EAAOwC,EAAKd,EAAO1B,KAAKzF,MAC1BoI,EAAYF,EAEhB,GAAIjB,EAAc,CAChB,GAAIiB,EAAQN,IAAoB,EAC9B,OAAOiB,EAETT,EAAYF,EAAQN,EAQtB,OANAA,GAAmBQ,EAEnBS,EAAIpD,GAAJ,eACKwC,EADL,eAEG1I,EAASE,EAAemI,EAAkBQ,IAEtCS,IACN,IAECC,EAAY,EACVC,EAAezC,EAASjD,KAAI,SAAAoC,GAChC,IAAMuD,EAAWJ,EAAiBlE,YAAOe,EAAM0B,EAAO1B,KAAKf,SACrDwD,EAAQ,CACZR,EAAGjC,EAAKwD,UACRN,EAAGK,EAAWA,EAASzJ,GAAUE,EAAeqJ,EAAY,GAG9D,OADAA,EAAYZ,EAAMS,EACXT,KAGT,MAAO,CACLlI,KAAI,UAAEqH,IAAKN,EAAOnD,MAAM,aAApB,aAAE,EAAyB6E,QAAQ,KAAM,KAC7CzG,IAAK+E,EACLvF,KAAMuH,QAGT,CAACvH,EAAMlB,EAASgG,EAAU7G,EAAcF,EAAQM,IAE7CqJ,EAAe3H,mBAAQ,WAC3B,OAAO2B,IACL2D,EAAOS,QAAO,SAAA3D,GAAC,QAAM/D,EAAkB+D,EAAE3B,SACzC,SAAA2B,GAAC,uBAAI0D,IAAK1D,EAAEnC,aAAX,aAAI,EAAcmH,OAEpB,CAAC9B,EAAQjH,IAENuJ,EAAe5H,mBAAQ,WAC3B,MAAO,CACL6H,MAAO,CACLC,QAAS,CACPC,MAAO,CACLC,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,KAAK,EACLC,OAAO,KAIbC,QAAS,CACPnB,EAAG,CACDoB,UAAW,SAAC7B,GAAD,gBAAsBA,EAAtB,YAA+B3I,KAE5CmI,EAAG,CACDqC,UAAWlK,EAAU,EAAI,SAACqI,GAAD,gBAAsB3D,GAAkB2D,GAAxC,sBAA4DrI,GAAW,IAAO8E,GAAgB9E,GAAWA,EAAzG,YAAoHN,SAAWyK,IAG5JC,MAAO,CACLC,KAAkB,IAAZrK,EAAgB,WAAa,UACnCsK,OAAQ,CACNJ,UAAWlK,EAAU,EAAI0E,QAAoByF,IAGjDI,WAAY,CACVC,QAAS7K,EACTuK,UAAW,SAACvF,GAAD,OAAgBA,GAAK,IAAOG,GAAgBH,GAAKA,IAE9D9E,MAAO,CACL4K,KAAM5K,EACN6K,MAAO,CACLC,SAAU,OACVC,WAAY,yDAGhBC,SAAU,CACRJ,KAAK,GAAD,OAAK7K,EAAe,QAAU,QAA9B,sBAAmDF,GACvDoL,UAAU,EACVJ,MAAO,CACLC,SAAU,OACVC,WAAY,yDAGhBG,YAAa,CACXC,QAAS,CACPC,eAAgB,EAChBC,WAAY,CACVC,OAAQ,CACN,CAAEC,KAAM,EAAGC,GAAI,GAAIlL,KAAM,OAAQmL,MAAO,UAAWC,UAAW,WAC9D,CAAEH,KAAM,GAAIC,GAAI,GAAIlL,KAAM,QAASmL,MAAO,UAAWC,UAAW,WAChE,CAAEH,KAAM,GAAIC,GAAI,IAAKlL,KAAM,SAAUmL,MAAO,UAAWC,UAAW,WAClE,CAAEH,KAAM,IAAKC,GAAI,IAAKlL,KAAM,UAAWmL,MAAO,WAC9C,CAAEF,KAAM,IAAKC,GAAI,IAAKlL,KAAM,UAAWmL,MAAO,WAC9C,CAAEF,KAAM,IAAKC,GAAI,IAAMlL,KAAM,WAAYmL,MAAO,WAChD,CAAEF,KAAM,KAAMC,GAAI,IAAMlL,KAAM,YAAamL,MAAO,WAClD,CAAEF,KAAM,KAAMC,GAAI,IAAOlL,KAAM,aAAcmL,MAAO,WACpD,CAAEF,KAAM,MAAOC,GAAI,OAAQlL,KAAM,UAAWmL,MAAO,kBAM5D,CAACzL,EAAOH,EAAQE,EAAcD,EAAgBK,IAEjD,OAAIS,EAEA,yBAAKiK,MAAO,CAAEc,OAAQlF,EAAMkF,OAAQC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,WACzF,kBAACC,GAAA,EAAD,CAAQC,QAAM,EAACC,QAAM,KAKpB,kBAAC,KAAD,eAAgB3J,IAAK1C,EAAW8G,IAAKA,EAAKwF,QAASzC,EAActC,OAAQqC,EAAcgB,KAAM5K,GAAe+G,OCjR/GwF,GAAmB,mCACnBC,GAAe,gCAgBrB,IAEMC,GAAgC,WACpC,IAAMC,EAAQ,eACT3M,EADS,CAEZO,kBAAmB+G,OAAOsF,YAAYnM,EAAkBuD,KAAI,SAAA6I,GAAC,MAAI,CAACA,GAAG,SAGvE,GAAIpL,aAAaqB,eAAe2J,IAAe,CAC7C,IAAMK,EAAkBrL,aAAac,QAAQkK,IAC7C,GAAIK,EAAiB,CACnB,IAAMC,EAAiBpL,KAAKa,MAAMsK,GAClC,OAAO,eACFH,EADL,GAEKI,IAKT,OAAOJ,EAjB6B,GA8QvBK,OA1Pf,WAAgB,IAAD,EACyBlM,mBArCxC,WAKE,GAAIW,aAAaqB,eAAe0J,IAAmB,CACjD,IAAMM,EAAkBrL,aAAac,QAAQiK,IAC7C,GAAIM,EACF,OAAOnL,KAAKa,MAAMsK,GAGtB,MAAO,GA0BwCG,IADlC,mBACNC,EADM,KACOC,EADP,KAGPC,EAAWC,iBAAY,MAHhB,EAIqBvM,mBAAS4L,GAAezM,WAJ7C,mBAINA,EAJM,KAIKqN,EAJL,OAKexM,mBAAS4L,GAAexM,QALvC,mBAKNA,EALM,KAKEqN,EALF,OAMiBzM,mBAAS4L,GAAelM,SANzC,mBAMNA,EANM,KAMGgN,EANH,OAO2B1M,mBAAS4L,GAAetM,cAPnD,mBAONA,EAPM,KAOQqN,EAPR,OAQ+B3M,mBAAS4L,GAAevM,gBARvD,mBAQNA,EARM,KAQUuN,EARV,OASa5M,mBAAS4L,GAAerM,OATrC,mBASNA,EATM,KASCsN,EATD,OAUyB7M,mBAAS4L,GAAepM,aAVjD,mBAUNA,EAVM,KAUOsN,EAVP,OAWiC9M,mBAAS4L,GAAenM,mBAXzD,mBAWNsN,EAXM,KAWWC,EAXX,OAYahN,oBAAS,GAZtB,oBAYNwB,GAZM,MAYCyL,GAZD,MAaChN,GAAaF,IAAnBsB,KAEF6L,GAAiB1G,OAAOG,QAAQ1G,IAAUkN,SAAQ,YAA6B,IAAD,mBAA1BrI,EAA0B,KAAjBsI,EAAiB,KAC5EC,EAAcD,EAAYvN,KAAKyI,QAAQ,KAAM,KACnD,MAAM,CACJ,CACEzG,IAAKiD,EACLiD,MAAOjD,EACPqF,KAAMkD,IAJV,mBAMK7G,OAAOG,QAAQyG,EAAYE,SAAgCpK,KAAI,mCAAErB,EAAF,KAAOwB,EAAP,WAAwB,CACxFxB,IAAI,GAAD,OAAKiD,EAAL,oBAAwBjD,GAC3BsI,KAAK,GAAD,OAAK9G,EAAWxD,MAAhB,OAAuBwD,EAAWE,OAAX,YAAyBF,EAAWE,QAAW,GAAtE,aAA6E8J,GACjFtF,MAAM,GAAD,OAAKjD,EAAL,oBAAwBjD,YAK7B0L,GAAwBnM,mBAAQ,kBAAMoF,OAAOC,KAAKsG,GAAiB5F,QAAO,SAAA4E,GAAC,OAAIgB,EAAgBhB,QAAK,CAACgB,IAuB3G,OArBA1M,qBAAU,WACRM,aAAaC,QAAQ8K,GAAkB7K,KAAKC,UAAUsL,MACrD,CAACA,IAEJ/L,qBAAU,WACRM,aAAaC,QAAQ+K,GAAc9K,KAAKC,UAAU,CAAE1B,SAAQE,eAAcD,iBAAgBE,QAAOC,cAAaC,kBAAmBsN,EAAiBrN,UAASP,iBAC1J,CAACC,EAAQE,EAAcD,EAAgBE,EAAOC,EAAauN,EAAiBrN,EAASP,IAExFkB,qBAAU,WACR,IAAIC,GAAY,EAOhB,OANIkB,IACFgM,YAAW,WACLlN,GACJ2M,IAAS,KACR,KAEE,WACL3M,GAAY,KAEb,CAACkB,KAGF,6BACE,kBAACiM,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACD,EAAA,EAAKE,IAAN,KACE,kBAACF,EAAA,EAAKG,OAAN,CAAaC,MAAO,IAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CACE7H,IAAKqG,EACLnN,UAAWA,EACX+L,OAAQ,IACR5L,aAAcA,EACdC,MAAOA,EACPH,OAAQA,EACRC,eAAgBA,EAChBG,YAAaA,EACbC,kBAAmBsN,EACnBrN,QAASA,MAIf,kBAAC+N,EAAA,EAAKG,OAAN,CAAaC,MAAO,GAClB,kBAACC,EAAA,EAAD,CAAS1D,MAAO,CAAEc,OAAQ,SACxB,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACD,EAAA,EAAKE,MAAN,KACE,wCACA,2BAAOC,YAAY,gBAAgBnE,KAAK,OAAOoE,aAAc5O,EAAO6O,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAqBxB,EAASwB,EAAOtG,WAGnH,kBAACgG,EAAA,EAAKO,OAAN,CACEC,MAAM,oBACNxG,MAAO5I,EACPqP,SAAU,SAACC,EAAD,OAAM1G,EAAN,EAAMA,MAAN,OAAkByE,EAAazE,IACzC0D,QAAS,CACP,CAAE5J,IAAK,UAAWsI,KAAM,UAAWpC,MAAO,WAC1C,CAAElG,IAAK,OAAQsI,KAAM,OAAQpC,MAAO,QACpC,CAAElG,IAAK,OAAQsI,KAAM,OAAQpC,MAAO,QACpC,CAAElG,IAAK,MAAOsI,KAAM,MAAOpC,MAAO,UAItC,kBAACgG,EAAA,EAAKO,OAAN,CACEC,MAAM,+BACNxG,MAAOzI,EAAe,QAAU,QAChCkP,SAAU,SAACC,EAAD,OAAM1G,EAAN,EAAMA,MAAN,OAAkB4E,EAA0B,UAAV5E,IAC5C0D,QAAS,CACP,CAAE5J,IAAK,QAASsI,KAAM,QAASpC,MAAO,SACtC,CAAElG,IAAK,QAASsI,KAAM,QAASpC,MAAO,YAI1C,kBAACgG,EAAA,EAAKO,OAAN,CACEC,MAAM,yBACNxG,MAAO3I,EACPoP,SAAU,SAACC,EAAD,OAAM1G,EAAN,EAAMA,MAAN,OAAkB0E,EAAU1E,IACtC0D,QAAS,CACP,CAAE5J,IAAK,QAASsI,KAAM,QAASpC,MAAO,SACtC,CAAElG,IAAK,SAAUsI,KAAM,SAAUpC,MAAO,aAI5C,kBAACgG,EAAA,EAAKE,MAAN,KACE,oDAA0B7O,EAA1B,sBACA,2BAAO2K,KAAK,SAASmE,YAAY,iBAAiBQ,IAAI,IAAIP,aAAczO,EAAS0O,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAqB3B,EAAW1E,SAASqG,EAAOtG,QAAU,OAGrJ,kBAACgG,EAAA,EAAKE,MAAN,CAAYU,SAAUjP,EAAU,GAC9B,4EACA,2BACEqK,KAAK,SACLmE,YAAY,iBACZQ,IAAI,IACJP,aAAc3O,EACd4O,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAqBvB,EAAe9E,SAASqG,EAAOtG,QAAUvI,OAI1E,kBAACuO,EAAA,EAAKE,MAAN,CACEW,QAASN,IACTO,YAAa,CAAE1L,GAAI,2BACnB2L,WAAS,EACTP,MAAO,CAAEQ,SAAU,qCAAsCC,QAAS,2BAClEjH,MAAOwF,GACPiB,SAAU,SAACC,EAAD,OAAW1G,EAAX,EAAWA,MAAX,OACRiF,GAAmB,SAAAlF,GACjB,IAAMmH,EAAI,eAAQnH,GACZoH,EAAgB1I,OAAOsF,YAAa/D,EAAmB7E,KAAI,SAAA6I,GAAC,MAAI,CAACA,GAAG,OAI1E,OAHAvF,OAAOC,KAAPD,OAAA,IAAAA,CAAA,GAAiByI,EAAjB,GAA0BC,IAAiBlL,SAAQ,SAAA+H,GACjDkD,EAAKlD,GAAKmD,EAAcnD,KAAM,KAEzBkD,MAGXE,QAAM,EACNC,UAAQ,EACR3D,QAASyB,KAGX,kBAACa,EAAA,EAAKE,MAAN,KACE,kBAACoB,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASlQ,EAAgBmP,SAAU,kBAAM5B,GAAmBvN,IAAiBkP,MAAM,sBAEtG,kBAACiB,EAAA,EAAD,CACEC,SAAUjO,GACVkO,QAAS,WAAO,IAAD,EACb,UAAApD,EAASqD,eAAT,SAAkB1G,MAAM2G,UAAUpP,MAAK,YAAsB,IAAnBqP,EAAkB,EAAlBA,OAClCC,EAAc,sBACf1D,GADe,CAElB,CACEwD,QAASC,EACTnQ,UACAN,SACAG,QACAD,eACAG,kBAAmBsN,EACnBvN,cACAH,iBACAF,eAGJkN,EAAeyD,GACf7C,IAAS,QAIZzL,GAAQ,QAAU,YAM7B,kBAACiM,EAAA,EAAKE,IAAN,KACE,kBAACF,EAAA,EAAKG,OAAN,CAAaC,MAAO,IAClB,kBAACC,EAAA,EAAD,CAASI,YAAoC,IAAvB9B,EAAYzI,QAC/ByI,EAAYzI,OAAS,EACpB,kBAAC,WAAD,KACE,kBAACqK,EAAA,EAAD,CAAQ+B,GAAG,MAAX,gBACA,yBAAKC,UAAU,mCACZ5D,EAAYlJ,KAAI,SAAC+M,EAAM/L,GACtB,OACE,kBAACgM,EAAA,EAAD,CAAMrO,IAAG,UAAKqC,EAAL,YAAc+L,EAAK1Q,OAASyQ,UAAU,yCAC7C,kBAACG,EAAA,EAAD,CAAOH,UAAU,+CAA+CI,IAAKH,EAAK1Q,MAAO8Q,SAAO,EAACC,IAAI,EAAOC,IAAKN,EAAKL,UAC9G,kBAACM,EAAA,EAAKM,QAAN,KACE,kBAACN,EAAA,EAAKlC,OAAN,KAAciC,EAAK1Q,OACnB,kBAAC2Q,EAAA,EAAKO,KAAN,eAAeR,EAAK3Q,aAAe,QAAU,QAA7C,sBAAkE2Q,EAAK7Q,UAEzE,kBAAC8Q,EAAA,EAAKM,QAAN,CAAcE,OAAK,GACjB,0BAAMV,UAAU,iBAAhB,QAAsCC,EAAKzQ,YAA3C,SAEA,kBAACmR,EAAA,EAAD,CAAM9Q,KAAK,eAHb,UAIM2G,OAAOC,KAAKwJ,EAAKxQ,mBAAmB0H,QAAO,SAAA4E,GAAC,OAAIkE,EAAKxQ,kBAAkBsM,MAAIpI,OAJjF,aAOA,kBAAC6L,EAAA,EAAOoB,MAAR,CAAcC,OAAO,IAAIC,SAAS,UAChC,kBAACtB,EAAA,EAAD,CACEuB,SAAO,EACPrB,QAAS,WACPjD,EAAUwD,EAAK7Q,QACfuN,EAAgBsD,EAAK3Q,cACrBsN,EAAkBqD,EAAK5Q,gBACvBwN,EAASoD,EAAK1Q,OACduN,EAAemD,EAAKzQ,aACpBwN,EAAmBiD,EAAKxQ,mBACxBiN,EAAWuD,EAAKvQ,SAAW,GAC3B8M,EAAayD,EAAK9Q,WAAa,WAC/B6R,OAAOC,SAAS,EAAG,KAXvB,QAiBA,kBAACzB,EAAA,EAAD,CACEE,QAAS,WACPrD,EAAeD,EAAYjF,QAAO,SAACsH,EAAGyC,GAAJ,OAAYhN,IAAUgN,QAF5D,iBAcZ,kBAAClD,EAAA,EAAD,CAAQmD,MAAI,GACV,kBAACR,EAAA,EAAD,CAAM9Q,KAAK,iBADb,mCC1ShB,SAASuR,KAA2Q,OAA9PA,GAAW5K,OAAO6K,QAAU,SAAUhD,GAAU,IAAK,IAAIiD,EAAI,EAAGA,EAAIC,UAAU5N,OAAQ2N,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIzP,KAAO2P,EAAchL,OAAOiL,UAAUzP,eAAe0P,KAAKF,EAAQ3P,KAAQwM,EAAOxM,GAAO2P,EAAO3P,IAAY,OAAOwM,IAA2BsD,MAAMC,KAAML,WAEhT,SAASM,GAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkE3P,EAAKyP,EAAnEjD,EAEzF,SAAuCmD,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2D3P,EAAKyP,EAA5DjD,EAAS,GAAQ0D,EAAavL,OAAOC,KAAK+K,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAWpO,OAAQ2N,IAAOzP,EAAMkQ,EAAWT,GAAQQ,EAAS/K,QAAQlF,IAAQ,IAAawM,EAAOxM,GAAO2P,EAAO3P,IAAQ,OAAOwM,EAFxM2D,CAA8BR,EAAQM,GAAuB,GAAItL,OAAOyL,sBAAuB,CAAE,IAAIC,EAAmB1L,OAAOyL,sBAAsBT,GAAS,IAAKF,EAAI,EAAGA,EAAIY,EAAiBvO,OAAQ2N,IAAOzP,EAAMqQ,EAAiBZ,GAAQQ,EAAS/K,QAAQlF,IAAQ,GAAkB2E,OAAOiL,UAAUU,qBAAqBT,KAAKF,EAAQ3P,KAAgBwM,EAAOxM,GAAO2P,EAAO3P,IAAU,OAAOwM,EAMne,IAAI,GAAqB,IAAM+D,cAAc,OAAQ,CACnDC,EAAG,k0FACHC,KAAM,YAGJ,GAAqB,IAAMF,cAAc,OAAQ,CACnDC,EAAG,87HACHC,KAAM,YAGJ,GAAqB,IAAMF,cAAc,OAAQ,CACnDC,EAAG,43GACHC,KAAM,UAGJC,GAAqB,IAAMH,cAAc,OAAQ,CACnDpC,UAAW,eACXqC,EAAG,kMACHC,KAAM,YAGJE,GAAqB,IAAMJ,cAAc,OAAQ,CACnDC,EAAG,gDACHC,KAAM,YAGJG,GAAqB,IAAML,cAAc,OAAQ,CACnDC,EAAG,mDACHC,KAAM,UAGJI,GAAqB,IAAMN,cAAc,OAAQ,CACnDO,SAAU,UACVC,SAAU,UACVP,EAAG,gTACHC,KAAM,UAGJO,GAAqB,IAAMT,cAAc,OAAQ,CACnDO,SAAU,UACVC,SAAU,UACVP,EAAG,4LACHC,KAAM,UAGJQ,GAAsB,IAAMV,cAAc,OAAQ,CACpDC,EAAG,4zGACHC,KAAM,YAGJ,GAAU,SAAiBS,GAC7B,IAAIC,EAASD,EAAKC,OACdzT,EAAQwT,EAAKxT,MACbyG,EAAQ6L,GAAyBkB,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMX,cAAc,MAAOhB,GAAS,CACtDvD,MAAO,IACP3C,OAAQ,IACR+H,QAAS,cACTX,KAAM,OACNrM,IAAK+M,GACJhN,GAAQzG,EAAqB,IAAM6S,cAAc,QAAS,KAAM7S,GAAS,KAAM,GAAO,GAAO,GAAOgT,GAAOC,GAAOC,GAAOC,GAAOG,GAAOC,KAGxII,GAAa,IAAMnN,YAAW,SAAUC,EAAOC,GACjD,OAAoB,IAAMmM,cAAc,GAAShB,GAAS,CACxD4B,OAAQ/M,GACPD,OAEU,I,OCvEA,SAASsF,KACtB,OACE,yBACElB,MAAO,CACLc,OAAQ,QACRiI,WAAY,UACZhI,QAAS,OACTE,WAAY,SACZD,eAAgB,WAGlB,kBAAC,GAAD,CACE4E,UAAU,gBACV5F,MAAO,CAAEc,OAAQ,QAAS2C,MAAO,W,cCjB1B,SAASuF,GAAT,GAAoE,IAA1CrE,EAAyC,EAAzCA,SACjCsE,EAAoBvN,IAAMwN,SAASC,QAAQxE,GAEjD,OACE,kBAAC,WAAD,KACGsE,EAAkBnQ,KAAI,SAACsQ,EAAOtP,GAAR,OACrB,kBAAC,WAAD,CAAUrC,IAAKqC,GACZsP,EACAtP,EAAQmP,EAAkB1P,OAAS,EAAI,KAAOO,EAAQmP,EAAkB1P,OAAS,EAAI,QAAU,Q,cC4C3FuI,OAzCf,WACE,IAAMuH,ECXO,WAA2B,IAAD,EACfzT,mBAAS0T,aAAS,IAAIxR,KAAQ,IADf,mBAChCoD,EADgC,KAC1BqO,EAD0B,KAqBvC,OAlBAtT,qBAAU,WACR,IAAIC,GAAY,EAYhB,OAVAC,MAAM,kEACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACAJ,GACJqT,EAAQ,IAAIzR,KAAKxB,EAAKkT,OAAOA,OAAOC,OAAOvO,UAE5CvE,OAAM,SAAAC,GACLC,QAAQC,KAAK,qCAAsCF,MAGhD,WACLV,GAAY,KAEb,IAEIgF,EDVawO,GAGpB,OAFoB/T,IAAZI,QAGC,kBAAC,GAAD,MAIP,yBAAK6P,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKO,IAAKwD,IAAW7I,OAAO,MAAMkF,IAAI,eAAgB,IACtD,yBAAKhG,MAAO,CAAE4J,OAAQ,UACpB,kBAAChG,EAAA,EAAD,CAAQ+B,GAAG,MAAX,0BAEE,kBAAC/B,EAAA,EAAOiG,UAAR,4DAGJ,yBAAK1D,IAAK2D,IAAShJ,OAAO,MAAMkF,IAAI,oBAGtC,kBAAC+D,GAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,GAAD,OAGF,gCACE,yCACW,IACT,kBAAChB,GAAD,KACGxT,EAAasD,KAAI,SAAAqN,GAAG,OACnB,uBAAG1O,IAAK0O,EAAIzQ,IAAKuU,IAAI,sBAAsBhG,OAAO,SAASiG,KAAM/D,EAAIzQ,KAClEyQ,EAAI1Q,UALb,qBASqB0U,IAAWd,EAAa,QAT7C,QE3BYe,QACW,cAA7BxD,OAAOyD,SAASC,UAEe,UAA7B1D,OAAOyD,SAASC,UAEhB1D,OAAOyD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3U,MAAK,SAAA4U,GACJA,EAAaC,gBAEdtU,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMsU,c","file":"static/js/main.5697afa9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ufrgs-inf.1abd8f9e.png\";","module.exports = __webpack_public_path__ + \"static/media/ufrgs.6440c8a1.png\";","export const DEFAULT_OPTIONS = {\n  chartType: \"heatmap\",\n  metric: \"cases\",\n  showDataLabels: false,\n  isCumulative: true,\n  title: \"Timeline Plots of Coronavirus Data\",\n  dayInterval: 30,\n  selectedCountries: {},\n  alignAt: 0,\n};\n\nexport const DEFAULT_COUNTRIES = [\n  \"Brazil\",\n  \"United_States_of_America\",\n  \"United_Kingdom\",\n  \"China\",\n  \"Sweden\",\n  \"Spain\",\n  \"Germany\",\n  \"France\",\n  \"Canada\",\n  \"Portugal\",\n  \"Italy\",\n  \"South_Korea\",\n  \"Iran\",\n  \"Israel\",\n  \"Netherlands\",\n  \"Peru\",\n];\n\nexport const DATA_SOURCES = [\n  {\n    name: \"ECDC\",\n    url: \"https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide\",\n  },\n  { name: \"Brasil.IO\", url: \"https://brasil.io/dataset/covid19/caso\" },\n  {\n    name: \"PHAS\",\n    url: \"https://www.folkhalsomyndigheten.se/smittskydd-beredskap/utbrott/aktuella-utbrott/covid-19/aktuellt-epidemiologiskt-lage\",\n  },\n  { name: \"NY Times\", url: \"https://github.com/nytimes/covid-19-data\" },\n  { name: \"ISC\", url: \"https://covid19.isciii.es/\" },\n  {\n    name: \"PHE\",\n    url: \"https://www.gov.uk/government/publications/covid-19-track-coronavirus-cases\",\n  },\n];\n","import { useState, useEffect, useMemo } from \"react\";\n\nexport const METADATA_KEY = \"covid19-tools.metadata.cacheV2\";\n\nexport default function useMetadata() {\n  const [metadata, setMetadata] = useState<Record<string, any>>({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    fetch(\"https://raw.githubusercontent.com/inf-covid19/covid19-data/master/data/metadata.json\")\n      .then(resp => resp.json())\n      .then(json => {\n        if (cancelled) return;\n\n        localStorage.setItem(METADATA_KEY, JSON.stringify(json));\n\n        setMetadata(json);\n      })\n      .catch(error => {\n        console.warn(\"Unable to fetch metadata.\", error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return useMemo(() => ({ data: metadata, loading }), [metadata, loading]);\n}\n","import { differenceInHours } from \"date-fns\";\nimport { csv } from \"d3\";\nimport { METADATA_KEY } from \"../hooks/useMetadata\";\nimport get from \"lodash/get\";\nconst STORAGE_KEY = \"covid19-tools.api.cacheV2\";\n\nexport const getRegionData = (regionId: string) => {\n  const metadata = JSON.parse(localStorage.getItem(METADATA_KEY) || \"{}\");\n\n  const regionData = get(metadata, regionId);\n\n  if (regionData && !!regionData.parent) {\n    const s = regionId.split(\".\");\n    regionId = [...s.slice(0, s.length - 1), regionData.parent].join(\".\");\n  }\n\n  return withCache(regionId, () => csv(`https://raw.githubusercontent.com/inf-covid19/covid19-data/master/${get(metadata, regionId).file}?v=2`));\n};\n\nfunction initializeCache() {\n  try {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      const parsed = JSON.parse(saved);\n      return parsed;\n    }\n  } catch {\n    return {};\n  }\n  return {};\n}\n\nconst cache = initializeCache();\n\nconst getKey = (key: string) => `${STORAGE_KEY}.${key}`;\n\nconst withCache = <T>(key: string, promiser: () => Promise<T>): Promise<T> => {\n  if (cache.hasOwnProperty(key)) {\n    if (differenceInHours(new Date(), new Date(cache[key].created_at)) < 2) {\n      const cachedData = localStorage.getItem(getKey(key));\n      if (cachedData) return Promise.resolve(JSON.parse(cachedData));\n    }\n  }\n\n  return promiser()\n    .then(\n      data => {\n        cache[key] = { created_at: new Date().toISOString() };\n        localStorage.setItem(getKey(key), JSON.stringify(data));\n        return data;\n      },\n      reason => {\n        if (localStorage.hasOwnProperty(getKey(key))) {\n          const cachedData = localStorage.getItem(getKey(key));\n          if (cachedData) return Promise.resolve(JSON.parse(cachedData));\n        }\n        return Promise.reject(reason);\n      }\n    )\n    .finally(() => {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(cache));\n    });\n};\n","import { DSVRowArray } from \"d3\";\nimport sortBy from \"lodash/sortBy\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { getRegionData } from \"../store\";\n\nexport default function useRegionData(regionIds: string[]) {\n  const [data, setData] = useState<Record<string, DSVRowArray> | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const triggerUpdate = useMemo(() => {\n    return sortBy(regionIds).join(\"|\");\n  }, [regionIds]);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    setError(null);\n    setData(null);\n    setLoading(true);\n\n    Promise.all(regionIds.map(id => getRegionData(id)))\n      .then(results => {\n        if (cancelled) return;\n\n        const data: Record<string, DSVRowArray> = {};\n        results.forEach((res, index) => {\n          data[regionIds[index]] = res;\n        });\n        setData(data);\n      })\n      .catch(err => {\n        if (cancelled) return;\n\n        setError(err);\n      })\n      .finally(() => {\n        if (cancelled) return;\n\n        setLoading(false);\n      });\n\n    return () => {\n      cancelled = true;\n    };\n  }, [triggerUpdate]);\n\n  return useMemo(() => ({ data, loading, error }), [data, loading, error]);\n}\n","import React, { useMemo } from \"react\";\nimport useRegionData from \"../hooks/useRegionData\";\nimport { eachDayOfInterval, subDays, format, startOfDay, parse, differenceInDays } from \"date-fns\";\nimport sortBy from \"lodash/sortBy\";\nimport orderBy from \"lodash/orderBy\";\nimport last from \"lodash/last\";\nimport first from \"lodash/first\";\nimport ReactApexChart, { Props } from \"react-apexcharts\";\nimport { Loader } from \"semantic-ui-react\";\nimport { ChartOptions } from \"./Editor\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nconst ordinalFormattter = (n: number) => numeral(n).format(\"Oo\");\nconst numberFormatter = d3.format(\".2s\");\n\ntype CustomizableChartProps = Omit<Props, \"options\" | \"series\" | \"type\"> & ChartOptions;\n\nconst placeTypeMap: any = {\n  state: \"state\",\n  city: \"city\",\n  autonomous_community: \"region\",\n  country: \"region\",\n  county: \"county\",\n  nhsr: \"region\",\n  utla: \"region\",\n  health_board: \"region\",\n  lgd: \"region\",\n};\n\nconst RegionConfig: any = {\n  Brazil: {\n    date: {\n      name: \"date\",\n      format: \"yyyy-MM-dd\",\n    },\n    metric: {\n      cases: \"confirmed\",\n      deaths: \"deaths\",\n    },\n  },\n  Spain: {\n    date: {\n      name: \"date\",\n      format: \"yyyy-MM-dd\",\n    },\n    metric: {\n      cases: \"cases\",\n      deaths: \"deaths\",\n    },\n  },\n  United_Kingdom: {\n    date: {\n      name: \"date\",\n      format: \"yyyy-MM-dd\",\n    },\n    metric: {\n      cases: \"cases\",\n      deaths: \"deaths\",\n    },\n  },\n  United_States_of_America: {\n    date: {\n      name: \"date\",\n      format: \"yyyy-MM-dd\",\n    },\n    metric: {\n      cases: \"cases\",\n      deaths: \"deaths\",\n    },\n  },\n  Sweden: {\n    date: {\n      name: \"date\",\n      format: \"yyyy-MM-dd\",\n    },\n    metric: {\n      cases: \"cases\",\n      deaths: \"deaths\",\n    },\n  },\n  Default: {\n    date: {\n      name: \"dateRep\",\n      format: \"dd/MM/yyyy\",\n    },\n    metric: {\n      cases: \"cases\",\n      deaths: \"deaths\",\n    },\n  },\n};\n\nfunction CustomizableChart(props: CustomizableChartProps, ref: React.Ref<any>) {\n  const { chartType = \"heatmap\", title, metric, showDataLabels, isCumulative, dayInterval, selectedCountries, alignAt = 0, ...rest } = props;\n\n  const timeline = useMemo(\n    () =>\n      eachDayOfInterval({\n        start: subDays(new Date(), dayInterval),\n        end: new Date(),\n      }),\n    [dayInterval]\n  );\n\n  const regionsIds = useMemo(() => Object.keys(selectedCountries), [selectedCountries]);\n\n  const { data, loading } = useRegionData(regionsIds);\n\n  const series = useMemo(() => {\n    if (loading || !data) {\n      return [];\n    }\n\n    return Object.entries(data).map(([region, regionData]) => {\n      const country = first(region.split(\".\")) as any;\n      const hasSubRegion = region.indexOf(\".\") > -1;\n      const config = hasSubRegion && RegionConfig.hasOwnProperty(country) ? RegionConfig[country] : RegionConfig.Default;\n\n      if (hasSubRegion) {\n        let subRegion = last(region.split(\".\"));\n        regionData = regionData.filter((r: any) => r[placeTypeMap[r.place_type]] === subRegion) as any;\n      }\n\n      regionData = orderBy(regionData, x => parse(x[config.date.name] as string, config.date.format, startOfDay(new Date())), \"desc\") as any;\n\n      let cumulativeValue = 0;\n      if (alignAt > 0) {\n        let prevDate: Date;\n\n        const normalizedData = regionData.reduceRight<any[]>((arr, curr) => {\n          let date = parse(curr[config.date.name] as string, config.date.format, startOfDay(new Date()));\n          const value = parseInt(curr[config.metric[metric]] || \"0\");\n          let diffValue = value;\n\n          if (hasSubRegion) {\n            diffValue = value - cumulativeValue;\n          }\n\n          if (prevDate && differenceInDays(date, prevDate) > 1) {\n            const missingInterval = eachDayOfInterval({\n              start: prevDate,\n              end: date,\n            });\n            missingInterval.slice(1, missingInterval.length - 1).forEach(() => {\n              arr.push({\n                total: cumulativeValue,\n              });\n            });\n          }\n\n          cumulativeValue += diffValue;\n          arr.push({\n            ...curr,\n            total: cumulativeValue,\n          });\n          prevDate = date;\n          return arr;\n        }, []);\n        return {\n          name: last(region.split(\".\"))?.replace(/_/g, \" \"),\n          key: region,\n          data: normalizedData\n            .filter(v => v.total >= alignAt)\n            .map((v, index) => ({\n              x: index + 1,\n              y: isCumulative ? v.total : v[metric],\n            })),\n        };\n      }\n\n      const regionDataByDate = regionData.reduceRight<Record<string, any>>((acc, curr) => {\n        const value = parseInt(curr[config.metric[metric]] || \"0\");\n        const date = curr[config.date.name] as string;\n        let diffValue = value;\n\n        if (hasSubRegion) {\n          if (value - cumulativeValue === 0) {\n            return acc;\n          }\n          diffValue = value - cumulativeValue;\n        }\n        cumulativeValue += diffValue;\n\n        acc[date] = {\n          ...curr,\n          [metric]: isCumulative ? cumulativeValue : diffValue,\n        };\n        return acc;\n      }, {});\n\n      let prevValue = 0;\n      const regionSeries = timeline.map(date => {\n        const dateData = regionDataByDate[format(date, config.date.format)];\n        const value = {\n          x: date.getTime(),\n          y: dateData ? dateData[metric] : isCumulative ? prevValue : 0,\n        };\n        prevValue = value.y;\n        return value;\n      });\n\n      return {\n        name: last(region.split(\".\"))?.replace(/_/g, \" \"),\n        key: region,\n        data: regionSeries,\n      };\n    });\n  }, [data, loading, timeline, isCumulative, metric, alignAt]);\n\n  const sortedSeries = useMemo(() => {\n    return sortBy(\n      series.filter(s => !!selectedCountries[s.key]),\n      s => last(s.data)?.y\n    );\n  }, [series, selectedCountries]);\n\n  const chartOptions = useMemo(() => {\n    return {\n      chart: {\n        toolbar: {\n          tools: {\n            download: true,\n            selection: false,\n            zoom: false,\n            zoomin: false,\n            zoomout: false,\n            pan: false,\n            reset: false,\n          },\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: (value: string) => `${value} ${metric}`,\n        },\n        x: {\n          formatter: alignAt > 0 ? (value: number) => `${ordinalFormattter(value)} day after ${alignAt >= 1000 ? numberFormatter(alignAt) : alignAt} ${metric}` : undefined,\n        },\n      },\n      xaxis: {\n        type: alignAt === 0 ? \"datetime\" : \"numeric\",\n        labels: {\n          formatter: alignAt > 0 ? ordinalFormattter : undefined,\n        },\n      },\n      dataLabels: {\n        enabled: showDataLabels,\n        formatter: (n: number) => (n >= 1000 ? numberFormatter(n) : n),\n      },\n      title: {\n        text: title,\n        style: {\n          fontSize: \"20px\",\n          fontFamily: \"Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif\",\n        },\n      },\n      subtitle: {\n        text: `${isCumulative ? \"Total\" : \"Daily\"} number of ${metric}`,\n        floating: true,\n        style: {\n          fontSize: \"14px\",\n          fontFamily: \"Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif\",\n        },\n      },\n      plotOptions: {\n        heatmap: {\n          shadeIntensity: 0.0,\n          colorScale: {\n            ranges: [\n              { from: 0, to: 10, name: \"0-10\", color: \"#ffffd9\", foreColor: \"#0d0d0d\" },\n              { from: 11, to: 50, name: \"11-50\", color: \"#edf8b1\", foreColor: \"#0d0d0d\" },\n              { from: 51, to: 100, name: \"51-100\", color: \"#c7e9b4\", foreColor: \"#0d0d0d\" },\n              { from: 101, to: 250, name: \"101-250\", color: \"#7fcdbb\" },\n              { from: 251, to: 500, name: \"251-500\", color: \"#41b6c4\" },\n              { from: 501, to: 1000, name: \"501-1000\", color: \"#1d91c0\" },\n              { from: 1001, to: 5000, name: \"1001-5000\", color: \"#225ea8\" },\n              { from: 5001, to: 10000, name: \"5001-10000\", color: \"#253494\" },\n              { from: 10001, to: 999999, name: \"> 10000\", color: \"#081d58\" },\n            ],\n          },\n        },\n      },\n    };\n  }, [title, metric, isCumulative, showDataLabels, alignAt]);\n\n  if (loading) {\n    return (\n      <div style={{ height: props.height, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Loader active inline />\n      </div>\n    );\n  }\n\n  return <ReactApexChart key={chartType} ref={ref} options={chartOptions} series={sortedSeries} type={chartType} {...rest} />;\n}\n\nexport default React.forwardRef(CustomizableChart);\n","import React, { Fragment, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, Card, Checkbox, Form, Grid, Header, Icon, Image, Segment, Select } from \"semantic-ui-react\";\nimport { DEFAULT_OPTIONS, DEFAULT_COUNTRIES } from \"../constants\";\nimport \"./Editor.css\";\nimport CustomizableChart from \"./CustomizableChart\";\nimport useMetadata from \"../hooks/useMetadata\";\n\ntype ChartType = \"heatmap\" | \"bar\" | \"area\" | \"line\";\ntype MetricType = \"cases\" | \"deaths\";\ntype SelectedCountriesMap = Record<string, boolean>;\nexport type ChartOptions = {\n  chartType: ChartType;\n  metric: MetricType;\n  isCumulative: boolean;\n  alignAt: number;\n  showDataLabels: boolean;\n  title: string;\n  dayInterval: number;\n  selectedCountries: SelectedCountriesMap;\n};\n\nconst SAVED_CHARTS_KEY = \"covid19-tools.editor.savedCharts\";\nconst DEFAULTS_KEY = \"covid19-tools.editor.defaults\";\n\nfunction getSavedCharts(): Array<\n  {\n    dataURI: string;\n  } & ChartOptions\n> {\n  if (localStorage.hasOwnProperty(SAVED_CHARTS_KEY)) {\n    const savedChartsJSON = localStorage.getItem(SAVED_CHARTS_KEY);\n    if (savedChartsJSON) {\n      return JSON.parse(savedChartsJSON);\n    }\n  }\n  return [];\n}\n\nconst countryOptions: any = [];\n\nconst defaultsValues: ChartOptions = (() => {\n  const defaults = {\n    ...DEFAULT_OPTIONS,\n    selectedCountries: Object.fromEntries(DEFAULT_COUNTRIES.map(k => [k, true])),\n  };\n\n  if (localStorage.hasOwnProperty(DEFAULTS_KEY)) {\n    const savedChartsJSON = localStorage.getItem(DEFAULTS_KEY);\n    if (savedChartsJSON) {\n      const parsedDefaults = JSON.parse(savedChartsJSON);\n      return {\n        ...defaults,\n        ...parsedDefaults,\n      };\n    }\n  }\n\n  return defaults;\n})();\n\nfunction App() {\n  const [savedCharts, setSavedCharts] = useState(getSavedCharts());\n\n  const chartRef = useRef<any>(null);\n  const [chartType, setChartType] = useState(defaultsValues.chartType);\n  const [metric, setMetric] = useState(defaultsValues.metric);\n  const [alignAt, setAlignAt] = useState(defaultsValues.alignAt);\n  const [isCumulative, setIsCumulative] = useState(defaultsValues.isCumulative);\n  const [showDataLabels, setShowDataLabels] = useState(defaultsValues.showDataLabels);\n  const [title, setTitle] = useState(defaultsValues.title);\n  const [dayInterval, setDayInterval] = useState(defaultsValues.dayInterval);\n  const [selectedRegions, setSelectedRegions] = useState(defaultsValues.selectedCountries);\n  const [saved, setSaved] = useState(false);\n  const { data: metadata } = useMetadata();\n\n  const regionsOptions = Object.entries(metadata).flatMap(([country, countryData]) => {\n    const countryName = countryData.name.replace(/_/g, \" \");\n    return [\n      {\n        key: country,\n        value: country,\n        text: countryName,\n      },\n      ...Object.entries(countryData.regions as Record<string, any>).map(([key, regionData]) => ({\n        key: `${country}.regions.${key}`,\n        text: `${regionData.name}${regionData.parent ? `, ${regionData.parent}` : \"\"}, ${countryName}`,\n        value: `${country}.regions.${key}`,\n      })),\n    ];\n  });\n\n  const selectedRegionOptions = useMemo(() => Object.keys(selectedRegions).filter(k => selectedRegions[k]), [selectedRegions]);\n\n  useEffect(() => {\n    localStorage.setItem(SAVED_CHARTS_KEY, JSON.stringify(savedCharts));\n  }, [savedCharts]);\n\n  useEffect(() => {\n    localStorage.setItem(DEFAULTS_KEY, JSON.stringify({ metric, isCumulative, showDataLabels, title, dayInterval, selectedCountries: selectedRegions, alignAt, chartType }));\n  }, [metric, isCumulative, showDataLabels, title, dayInterval, selectedRegions, alignAt, chartType]);\n\n  useEffect(() => {\n    let cancelled = false;\n    if (saved) {\n      setTimeout(() => {\n        if (cancelled) return;\n        setSaved(false);\n      }, 3000);\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [saved]);\n\n  return (\n    <div>\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column width={12}>\n            <Segment>\n              <CustomizableChart\n                ref={chartRef}\n                chartType={chartType}\n                height={600}\n                isCumulative={isCumulative}\n                title={title}\n                metric={metric}\n                showDataLabels={showDataLabels}\n                dayInterval={dayInterval}\n                selectedCountries={selectedRegions}\n                alignAt={alignAt}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Segment style={{ height: \"100%\" }}>\n              <Form>\n                <Header>Options</Header>\n                <Form.Field>\n                  <label>Title</label>\n                  <input placeholder=\"Enter a title\" type=\"text\" defaultValue={title} onBlur={({ target }: any) => setTitle(target.value)} />\n                </Form.Field>\n\n                <Form.Select\n                  label=\"Choose chart type\"\n                  value={chartType}\n                  onChange={(_, { value }) => setChartType(value as ChartType)}\n                  options={[\n                    { key: \"heatmap\", text: \"Heatmap\", value: \"heatmap\" },\n                    { key: \"line\", text: \"Line\", value: \"line\" },\n                    { key: \"area\", text: \"Area\", value: \"area\" },\n                    { key: \"bar\", text: \"Bar\", value: \"bar\" },\n                  ]}\n                />\n\n                <Form.Select\n                  label=\"Choose total or daily values\"\n                  value={isCumulative ? \"total\" : \"daily\"}\n                  onChange={(_, { value }) => setIsCumulative(value === \"total\")}\n                  options={[\n                    { key: \"total\", text: \"Total\", value: \"total\" },\n                    { key: \"daily\", text: \"Daily\", value: \"daily\" },\n                  ]}\n                />\n\n                <Form.Select\n                  label=\"Choose cases or deaths\"\n                  value={metric}\n                  onChange={(_, { value }) => setMetric(value as MetricType)}\n                  options={[\n                    { key: \"cases\", text: \"Cases\", value: \"cases\" },\n                    { key: \"deaths\", text: \"Deaths\", value: \"deaths\" },\n                  ]}\n                />\n\n                <Form.Field>\n                  <label>Minimum number of {metric} to align timeline</label>\n                  <input type=\"number\" placeholder=\"Enter a number\" min=\"0\" defaultValue={alignAt} onBlur={({ target }: any) => setAlignAt(parseInt(target.value) || 0)} />\n                </Form.Field>\n\n                <Form.Field disabled={alignAt > 0}>\n                  <label>How many past days would you like to see?</label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter a number\"\n                    min=\"0\"\n                    defaultValue={dayInterval}\n                    onBlur={({ target }: any) => setDayInterval(parseInt(target.value) || dayInterval)}\n                  />\n                </Form.Field>\n\n                <Form.Field\n                  control={Select}\n                  searchInput={{ id: \"editor-countries-select\" }}\n                  clearable\n                  label={{ children: \"Choose regions (click to add more)\", htmlFor: \"editor-countries-select\" }}\n                  value={selectedRegionOptions}\n                  onChange={(_: any, { value }: any) =>\n                    setSelectedRegions(curr => {\n                      const next = { ...curr };\n                      const invertedIndex = Object.fromEntries((value as string[]).map(k => [k, true]));\n                      Object.keys({ ...next, ...invertedIndex }).forEach(k => {\n                        next[k] = invertedIndex[k] || false;\n                      });\n                      return next;\n                    })\n                  }\n                  search\n                  multiple\n                  options={regionsOptions}\n                />\n\n                <Form.Field>\n                  <Checkbox toggle checked={showDataLabels} onChange={() => setShowDataLabels(!showDataLabels)} label=\"Show data labels\" />\n                </Form.Field>\n                <Button\n                  positive={saved}\n                  onClick={() => {\n                    chartRef.current?.chart.dataURI().then(({ imgURI }: any) => {\n                      const newSavedCharts = [\n                        ...savedCharts,\n                        {\n                          dataURI: imgURI,\n                          alignAt,\n                          metric,\n                          title,\n                          isCumulative,\n                          selectedCountries: selectedRegions,\n                          dayInterval,\n                          showDataLabels,\n                          chartType,\n                        },\n                      ];\n                      setSavedCharts(newSavedCharts);\n                      setSaved(true);\n                    });\n                  }}\n                >\n                  {saved ? \"Saved\" : \"Save\"}\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <Segment placeholder={savedCharts.length === 0}>\n              {savedCharts.length > 0 ? (\n                <Fragment>\n                  <Header as=\"h3\">Saved Charts</Header>\n                  <div className=\"Editor--saved-charts--container\">\n                    {savedCharts.map((item, index) => {\n                      return (\n                        <Card key={`${index}-${item.title}`} className=\"Editor--saved-charts--container--card\">\n                          <Image className=\"Editor--saved-charts--container--card--image\" alt={item.title} wrapped ui={false} src={item.dataURI} />\n                          <Card.Content>\n                            <Card.Header>{item.title}</Card.Header>\n                            <Card.Meta>{`${item.isCumulative ? \"Total\" : \"Daily\"} number of ${item.metric}`}</Card.Meta>\n                          </Card.Content>\n                          <Card.Content extra>\n                            <span className=\"right floated\">Past {item.dayInterval} days</span>\n\n                            <Icon name=\"map marker\" />\n                            {`${Object.keys(item.selectedCountries).filter(k => item.selectedCountries[k]).length} regions`}\n                          </Card.Content>\n\n                          <Button.Group widths=\"2\" attached=\"bottom\">\n                            <Button\n                              primary\n                              onClick={() => {\n                                setMetric(item.metric);\n                                setIsCumulative(item.isCumulative);\n                                setShowDataLabels(item.showDataLabels);\n                                setTitle(item.title);\n                                setDayInterval(item.dayInterval);\n                                setSelectedRegions(item.selectedCountries);\n                                setAlignAt(item.alignAt || 0);\n                                setChartType(item.chartType || \"heatmap\");\n                                window.scrollTo(0, 0);\n                              }}\n                            >\n                              Load\n                            </Button>\n\n                            <Button\n                              onClick={() => {\n                                setSavedCharts(savedCharts.filter((_, idx) => index !== idx));\n                              }}\n                            >\n                              Remove\n                            </Button>\n                          </Button.Group>\n                        </Card>\n                      );\n                    })}\n                  </div>\n                </Fragment>\n              ) : (\n                <Header icon>\n                  <Icon name=\"save outline\" />\n                  No charts were saved yet.\n                </Header>\n              )}\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\nexport default App;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M686.861 340.206C691.368 340.206 694.898 338.647 697.437 335.524C699.982 332.379 701.252 328.025 701.252 322.455C701.252 316.772 699.982 312.321 697.437 309.106C694.898 305.891 691.37 304.284 686.861 304.284C682.374 304.284 678.861 305.891 676.318 309.106C673.778 312.321 672.503 316.772 672.503 322.455C672.503 328.025 673.762 332.379 676.279 335.524C678.824 338.648 682.352 340.206 686.861 340.206ZM686.861 349.33C679.087 349.33 672.912 346.916 668.329 342.092C663.751 337.271 661.46 330.75 661.46 322.524C661.46 314.137 663.751 307.486 668.329 302.573C672.912 297.632 679.087 295.164 686.861 295.164C694.678 295.164 700.869 297.632 705.425 302.573C710.008 307.486 712.294 314.137 712.294 322.524C712.294 330.75 710.008 337.271 705.425 342.092C700.869 346.916 694.678 349.33 686.861 349.33ZM630.193 347.933V305.682H614.215V296.564H657.214V305.682H641.236V347.933H630.193ZM607.923 328.572C607.945 335.911 606.277 341.212 602.92 344.47C599.585 347.711 594.141 349.33 586.588 349.33C579.342 349.33 573.968 347.641 570.466 344.259C566.992 340.861 565.237 335.63 565.217 328.572V296.563H576.261V328.922C576.261 332.605 577.111 335.363 578.816 337.202C580.543 339.046 583.136 339.965 586.59 339.965C590.281 339.965 592.922 339.127 594.503 337.448C596.084 335.751 596.881 332.906 596.881 328.923V296.563H607.926V328.572H607.923ZM531.899 347.933V305.682H515.922V296.564H558.915V305.682H542.943V347.933H531.899ZM499.155 347.933V296.563H510.204V347.931H499.155V347.933ZM466.416 347.933V305.682H450.439V296.564H493.437V305.682H477.46V347.933H466.416ZM434.467 311.972C434.274 309.526 433.171 307.595 431.153 306.171C429.141 304.73 426.516 304.004 423.277 304.004C420.469 304.004 418.275 304.611 416.693 305.821C415.107 307.009 414.316 308.675 414.316 310.821C414.316 312.358 415.144 313.546 416.801 314.386C418.431 315.224 421.895 316.213 427.199 317.353C434.898 319.031 440.04 320.966 442.633 323.154C445.226 325.32 446.517 328.804 446.517 333.605C446.517 338.428 444.564 342.261 440.654 345.1C436.743 347.923 431.455 349.331 424.789 349.331C418.098 349.331 412.869 347.825 409.102 344.821C405.332 341.815 403.32 337.542 403.057 331.999H413.707C413.826 334.724 414.842 336.822 416.763 338.289C418.683 339.756 421.358 340.488 424.789 340.488C428.313 340.488 431.062 339.945 433.026 338.849C435.016 337.732 436.01 336.193 436.01 334.236C436.01 332.301 435.307 330.88 433.891 329.972C432.499 329.064 429.524 328.117 424.967 327.138C416.569 325.322 410.959 323.354 408.129 321.235C405.321 319.139 403.917 315.865 403.917 311.413C403.917 306.429 405.778 302.483 409.496 299.57C413.213 296.634 418.237 295.167 424.569 295.167C430.498 295.167 435.318 296.684 439.035 299.71C442.751 302.737 444.817 306.827 445.226 311.973H434.467V311.972ZM362.329 347.933H352V296.563H363.588L384.815 332.588V296.563H395.138V347.931H384.132L362.329 310.921V347.933ZM331.203 347.933V296.563H342.252V347.931H331.203\",\n  fill: \"#7F7F7F\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M937.634 380.694L930.619 401.349H944.687L937.634 380.694ZM912.664 420.639L931.374 369.271H944.183L962.93 420.639H951.197L947.635 410.188H927.559L924.068 420.639H912.664ZM908.35 402.64C907.678 408.58 905.279 413.301 901.151 416.795C897.051 420.29 891.824 422.038 885.464 422.038C878.03 422.038 872.118 419.624 867.728 414.801C863.36 409.978 861.176 403.458 861.176 395.232C861.176 386.844 863.36 380.194 867.728 375.281C872.118 370.34 878.029 367.872 885.464 367.872C891.747 367.872 896.955 369.522 901.081 372.834C905.207 376.119 907.628 380.581 908.348 386.215H897.266C896.905 383.446 895.669 381.243 893.56 379.613C891.473 377.978 888.811 377.168 885.572 377.168C881.472 377.168 878.256 378.764 875.932 381.953C873.603 385.125 872.441 389.528 872.441 395.163C872.441 400.662 873.592 404.974 875.894 408.093C878.219 411.195 881.446 412.743 885.572 412.743C888.811 412.743 891.473 411.835 893.56 410.018C895.669 408.202 896.907 405.745 897.266 402.643H908.35V402.64ZM842.219 420.639V369.271H853.264V420.639H842.219ZM809.475 420.639V378.389H793.503V369.271H836.496V378.389H820.524V420.639H809.475ZM761.41 364.028L768.355 353.647H779.651L768.855 364.028H761.41ZM765.654 380.694L758.639 401.349H772.707L765.654 380.694ZM740.682 420.639L759.392 369.271H772.201L790.948 420.639H779.22L775.654 410.188H755.578L752.092 420.639H740.682ZM693.155 420.639H682.831V369.271H699.018L708.664 409.978L718.163 369.271H734.135V420.639H723.812V377.447L713.914 420.639H703.052L693.153 376.5V420.639H693.155ZM641.167 391.704H653.976C656.827 391.704 658.963 391.145 660.377 390.026C661.819 388.881 662.539 387.172 662.539 384.887C662.539 382.629 661.851 380.942 660.485 379.823C659.145 378.678 657.117 378.108 654.406 378.108H641.167V391.704ZM630.119 420.639V369.271H656.779C661.819 369.271 665.871 370.588 668.942 373.216C672.035 375.829 673.584 379.275 673.584 383.561C673.584 388.501 671.868 392.114 668.436 394.392C667.527 395 666.494 395.511 665.343 395.931C665.994 396.189 666.58 396.469 667.107 396.769C670.13 398.517 671.701 401.451 671.82 405.573L672.073 413.999C672.121 415.676 672.299 416.864 672.612 417.563C672.924 418.262 673.526 418.82 674.414 419.241V420.601H662.214C661.929 420.068 661.676 418.923 661.461 417.176C661.246 415.408 661.122 413.51 661.1 411.483L661.029 406.73C660.98 404.424 660.27 402.779 658.904 401.801C657.558 400.822 655.316 400.333 652.173 400.333H641.167V420.639H630.119ZM595.868 412.914C600.375 412.914 603.905 411.355 606.45 408.232C608.989 405.087 610.264 400.733 610.264 395.163C610.264 389.48 608.989 385.029 606.45 381.814C603.905 378.599 600.376 376.992 595.868 376.992C591.381 376.992 587.868 378.599 585.33 381.814C582.785 385.029 581.515 389.48 581.515 395.163C581.515 400.733 582.774 405.087 585.291 408.232C587.836 411.355 591.359 412.914 595.868 412.914ZM595.868 422.036C588.099 422.036 581.919 419.622 577.341 414.8C572.758 409.977 570.466 403.456 570.466 395.23C570.466 386.843 572.758 380.193 577.341 375.279C581.919 370.339 588.099 367.871 595.868 367.871C603.69 367.871 609.876 370.339 614.432 375.279C619.015 380.193 621.306 386.843 621.306 395.23C621.306 403.456 619.015 409.977 614.432 414.8C609.875 419.624 603.688 422.036 595.868 422.036ZM527.795 420.639V369.271H565.43V378.389H538.839V390.059H562.013V398.903H538.839V420.639H527.795ZM484.334 420.639H474.006V369.271H485.594L506.822 405.296V369.271H517.145V420.639H506.139L484.336 383.629V420.639H484.334ZM453.209 420.639V369.271H464.258V420.639H453.209ZM384.454 420.639V369.271H423.386V378.389H395.499V389.291H421.368V398.136H395.499V411.517H424.606V420.641H384.454V420.639ZM342.252 411.795H351.569C356.056 411.795 359.412 410.328 361.645 407.392C363.899 404.436 365.024 400.011 365.024 394.114C365.024 388.781 363.98 384.787 361.898 382.131C359.81 379.448 356.663 378.109 352.467 378.109H342.252V411.795ZM331.203 420.639V369.271H353.835C361.102 369.271 366.622 371.339 370.387 375.491C374.174 379.637 376.073 385.706 376.073 393.696C376.073 402.501 374.104 409.201 370.172 413.792C366.261 418.356 360.515 420.642 352.936 420.642H331.203\",\n  fill: \"#7F7F7F\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M565.511 458.363C565.323 455.918 564.236 453.981 562.252 452.562C560.267 451.116 557.68 450.396 554.489 450.396C551.723 450.396 549.561 450.999 548.001 452.213C546.441 453.399 545.661 455.067 545.661 457.207C545.661 458.745 546.479 459.932 548.108 460.772C549.711 461.61 553.128 462.6 558.352 463.745C565.937 465.422 571.005 467.352 573.559 469.546C576.11 471.712 577.389 475.195 577.389 479.992C577.389 484.814 575.464 488.647 571.612 491.491C567.755 494.308 562.548 495.716 555.979 495.716C549.384 495.716 544.23 494.216 540.523 491.211C536.812 488.205 534.826 483.926 534.568 478.384H545.058C545.176 481.109 546.182 483.207 548.071 484.674C549.965 486.141 552.595 486.879 555.979 486.879C559.449 486.879 562.154 486.331 564.097 485.234C566.055 484.116 567.035 482.578 567.035 480.621C567.035 478.69 566.34 477.265 564.947 476.357C563.575 475.449 560.643 474.507 556.156 473.527C547.883 471.712 542.353 469.742 539.566 467.62C536.801 465.524 535.418 462.25 535.418 457.803C535.418 452.814 537.247 448.868 540.91 445.955C544.573 443.019 549.523 441.552 555.763 441.552C561.599 441.552 566.35 443.069 570.013 446.095C573.676 449.127 575.711 453.213 576.109 458.363H565.511ZM503.233 495.717C495.648 495.717 489.617 493.309 485.152 488.486C480.71 483.664 478.487 477.137 478.487 468.917C478.487 460.53 480.806 453.879 485.437 448.961C490.069 444.025 496.331 441.552 504.223 441.552C510.555 441.552 515.768 443.117 519.856 446.234C523.966 449.358 526.366 453.571 527.055 458.884H516.134C515.849 456.647 514.574 454.69 512.31 453.012C510.04 451.314 507.532 450.463 504.795 450.463C500.065 450.463 496.365 452.082 493.696 455.318C491.027 458.533 489.694 463.006 489.694 468.736C489.694 474.564 490.969 478.999 493.518 482.053C496.095 485.08 499.851 486.596 504.795 486.596H504.757C508.964 486.596 512.25 485.011 514.612 481.844C515.908 480.048 516.867 477.941 517.485 475.516V475.414H505.22V466.57H527.055V494.284H519.787L518.723 487.645L518.088 488.483C514.425 493.306 509.459 495.714 503.198 495.714H503.233V495.717ZM439.249 465.385H451.87C454.678 465.385 456.782 464.826 458.18 463.707C459.594 462.568 460.305 460.853 460.305 458.574C460.305 456.31 459.632 454.623 458.282 453.504C456.958 452.364 454.963 451.794 452.295 451.794H439.249V465.385ZM428.367 494.319V442.95H454.635C459.594 442.95 463.592 444.267 466.615 446.902C469.659 449.51 471.187 452.954 471.187 457.246C471.187 462.181 469.498 465.794 466.12 468.079C465.221 468.681 464.205 469.196 463.07 469.616C463.705 469.869 464.286 470.148 464.808 470.454C467.782 472.202 469.332 475.136 469.45 479.26L469.697 487.678C469.746 489.355 469.923 490.544 470.23 491.243C470.537 491.942 471.128 492.501 471.999 492.921V494.286H459.988C459.703 493.748 459.455 492.608 459.24 490.862C459.029 489.088 458.911 487.19 458.885 485.162L458.814 480.409C458.766 478.103 458.072 476.464 456.723 475.486C455.399 474.507 453.193 474.019 450.094 474.019H439.249V494.319H428.367ZM383.986 494.319V442.95H421.061V452.074H394.868V463.745H417.694V472.583H394.868V494.319H383.986ZM373.281 474.96C373.302 482.298 371.662 487.6 368.354 490.863C365.067 494.1 359.703 495.717 352.264 495.717C345.124 495.717 339.832 494.028 336.378 490.652C332.956 487.249 331.23 482.019 331.203 474.96V442.95H342.085V475.31C342.085 478.992 342.925 481.751 344.602 483.595C346.309 485.434 348.858 486.353 352.264 486.353C355.901 486.353 358.498 485.515 360.058 483.837C361.618 482.139 362.398 479.294 362.398 475.311V442.952H373.281V474.96Z\",\n  fill: \"black\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"logo--circle\",\n  d: \"M82.2361 311.197C82.2361 333.895 63.8278 352.291 41.1146 352.291C18.4083 352.293 0 333.895 0 311.197C0 288.505 18.4083 270.108 41.1146 270.108C63.8278 270.108 82.2361 288.505 82.2361 311.197Z\",\n  fill: \"#FF0000\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M577.221 516.597H331.692V534H577.221V516.597Z\",\n  fill: \"#FF0000\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M177.872 67.3363H110.86V350.567H177.872V67.3363Z\",\n  fill: \"black\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M209.718 350.567H281.54V202.303C281.54 173.917 285.015 120.812 340.854 120.812C395.584 120.812 391.91 176.971 391.91 200.105V253.829H469.014V166.133C469.014 50.4437 371.899 61.3412 367.009 61.3412C330.181 61.3412 298.877 74.0994 278.479 109.904C263.136 68.6644 231.323 65.7825 209.718 67.3418V350.567Z\",\n  fill: \"black\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M499.703 253.829H576.812V160.241H633.995V108.888H576.812V93.1954C576.812 62.6211 588.572 55.3791 633.995 60.7563V3.34438C499.913 -15.5961 499.702 68.535 499.702 93.1954V253.829H499.703Z\",\n  fill: \"black\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M355.301 562.934C351.199 562.934 348.023 564.48 345.773 567.574C343.523 570.645 342.398 574.934 342.398 580.441C342.398 591.902 346.699 597.633 355.301 597.633C358.91 597.633 363.281 596.73 368.414 594.926V604.066C364.195 605.824 359.484 606.703 354.281 606.703C346.805 606.703 341.086 604.441 337.125 599.918C333.164 595.371 331.184 588.855 331.184 580.371C331.184 575.027 332.156 570.352 334.102 566.344C336.047 562.312 338.836 559.23 342.469 557.098C346.125 554.941 350.402 553.863 355.301 553.863C360.293 553.863 365.309 555.07 370.348 557.484L366.832 566.344C364.91 565.43 362.977 564.633 361.031 563.953C359.086 563.273 357.176 562.934 355.301 562.934ZM426.035 580.23C426.035 588.738 423.926 595.277 419.707 599.848C415.488 604.418 409.441 606.703 401.566 606.703C393.691 606.703 387.645 604.418 383.426 599.848C379.207 595.277 377.098 588.715 377.098 580.16C377.098 571.605 379.207 565.078 383.426 560.578C387.668 556.055 393.738 553.793 401.637 553.793C409.535 553.793 415.57 556.066 419.742 560.613C423.938 565.16 426.035 571.699 426.035 580.23ZM388.523 580.23C388.523 585.973 389.613 590.297 391.793 593.203C393.973 596.109 397.23 597.562 401.566 597.562C410.262 597.562 414.609 591.785 414.609 580.23C414.609 568.652 410.285 562.863 401.637 562.863C397.301 562.863 394.031 564.328 391.828 567.258C389.625 570.164 388.523 574.488 388.523 580.23ZM466.008 554.602H477.012L459.539 606H447.656L430.219 554.602H441.223L450.891 585.188C451.43 586.992 451.98 589.102 452.543 591.516C453.129 593.906 453.492 595.57 453.633 596.508C453.891 594.352 454.77 590.578 456.27 585.188L466.008 554.602ZM483.516 606V554.602H494.414V606H483.516ZM549.996 579.809C549.996 588.27 547.582 594.75 542.754 599.25C537.949 603.75 531 606 521.906 606H507.352V554.602H523.488C531.879 554.602 538.395 556.816 543.035 561.246C547.676 565.676 549.996 571.863 549.996 579.809ZM538.676 580.09C538.676 569.051 533.801 563.531 524.051 563.531H518.25V597H522.926C533.426 597 538.676 591.363 538.676 580.09ZM556.324 591.094V582.305H575.203V591.094H556.324ZM607.125 606H596.262V576.258L596.367 571.371L596.543 566.027C594.738 567.832 593.484 569.016 592.781 569.578L586.875 574.324L581.637 567.785L598.195 554.602H607.125V606ZM657.117 576.539C657.117 586.664 654.984 594.223 650.719 599.215C646.453 604.207 639.996 606.703 631.348 606.703C628.301 606.703 625.992 606.539 624.422 606.211V597.492C626.391 597.984 628.453 598.23 630.609 598.23C634.242 598.23 637.23 597.703 639.574 596.648C641.918 595.57 643.711 593.895 644.953 591.621C646.195 589.324 646.91 586.172 647.098 582.164H646.676C645.316 584.367 643.746 585.914 641.965 586.805C640.184 587.695 637.957 588.141 635.285 588.141C630.809 588.141 627.281 586.711 624.703 583.852C622.125 580.969 620.836 576.973 620.836 571.863C620.836 566.355 622.395 562.008 625.512 558.82C628.652 555.609 632.918 554.004 638.309 554.004C642.105 554.004 645.422 554.895 648.258 556.676C651.117 558.457 653.309 561.047 654.832 564.445C656.355 567.82 657.117 571.852 657.117 576.539ZM638.52 562.723C636.27 562.723 634.512 563.496 633.246 565.043C631.98 566.59 631.348 568.816 631.348 571.723C631.348 574.207 631.922 576.176 633.07 577.629C634.219 579.082 635.965 579.809 638.309 579.809C640.512 579.809 642.398 579.094 643.969 577.664C645.539 576.211 646.324 574.547 646.324 572.672C646.324 569.883 645.586 567.527 644.109 565.605C642.656 563.684 640.793 562.723 638.52 562.723Z\",\n  fill: \"#FF0000\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 964,\n    height: 620,\n    viewBox: \"0 0 964 620\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.0fb68d66.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport { ReactComponent as Logo } from \"../assets/logo.svg\";\n\nimport \"./Loader.css\";\n\nexport default function Loader() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        background: \"#f5f5f5\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Logo\n        className=\"Loading--logo\"\n        style={{ height: \"150px\", width: \"auto\" }}\n      />\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\n\nexport default function ListDescriptor({ children }: React.PropsWithChildren<{}>) {\n  const effectiveChildren = React.Children.toArray(children);\n\n  return (\n    <Fragment>\n      {effectiveChildren.map((child, index) => (\n        <Fragment key={index}>\n          {child}\n          {index < effectiveChildren.length - 2 ? \", \" : index < effectiveChildren.length - 1 ? \" and \" : \"\"}\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n}\n","import * as fns from \"date-fns\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport LogoINF from \"./assets/ufrgs-inf.png\";\nimport LogoUFRGS from \"./assets/ufrgs.png\";\nimport Editor from \"./components/Editor\";\nimport Loader from \"./components/Loader\";\nimport { DATA_SOURCES } from \"./constants\";\nimport useLastUpdated from \"./hooks/useLastUpdated\";\nimport ListDescriptor from \"./components/ListDescriptor\";\nimport { Header, Container } from \"semantic-ui-react\";\nimport useMetadata from \"./hooks/useMetadata\";\n\nfunction App() {\n  const lastUpdated = useLastUpdated();\n  const { loading } = useMetadata();\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={LogoUFRGS} height=\"100\" alt=\"logo UFRGS\" />{\" \"}\n        <div style={{ margin: \"0 2em\" }}>\n          <Header as=\"h1\">\n            COVID-19 Analysis Tools\n            <Header.Subheader>A set of configurable tools around COVID-19 data.</Header.Subheader>\n          </Header>\n        </div>\n        <img src={LogoINF} height=\"100\" alt=\"logo UFRGS-INF\" />\n      </header>\n\n      <Container fluid>\n        <Editor />\n      </Container>\n\n      <footer>\n        <span>\n          Sources:{\" \"}\n          <ListDescriptor>\n            {DATA_SOURCES.map(src => (\n              <a key={src.url} rel=\"noopener noreferrer\" target=\"_blank\" href={src.url}>\n                {src.name}\n              </a>\n            ))}\n          </ListDescriptor>\n          . Last updated at {fns.format(lastUpdated, \"PPpp\")}.\n        </span>\n      </footer>\n    </div>\n  );\n}\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport { subHours } from \"date-fns\";\n\nexport default function useLastUpdated() {\n  const [date, setDate] = useState(subHours(new Date(), 2));\n\n  useEffect(() => {\n    let cancelled = false;\n\n    fetch(\"https://api.github.com/repos/inf-covid19/tools/branches/master\")\n      .then(resp => resp.json())\n      .then(json => {\n        if (cancelled) return;\n        setDate(new Date(json.commit.commit.author.date));\n      })\n      .catch(error => {\n        console.warn(\"Unable to fetch last updated date.\", error);\n      });\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return date;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}